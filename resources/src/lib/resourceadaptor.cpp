/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -m -a resourceadaptor -i resourcebase.h -l Akonadi::ResourceBase ../../include/org.kde.Akonadi.Resource.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "resourceadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ResourceAdaptor
 */

ResourceAdaptor::ResourceAdaptor(Akonadi::ResourceBase *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ResourceAdaptor::~ResourceAdaptor()
{
    // destructor
}

void ResourceAdaptor::cleanup()
{
    // handle method call org.kde.Akonadi.Resource.cleanup
    parent()->cleanup();
}

void ResourceAdaptor::configure()
{
    // handle method call org.kde.Akonadi.Resource.configure
    parent()->configure();
}

bool ResourceAdaptor::isOnline()
{
    // handle method call org.kde.Akonadi.Resource.isOnline
    return parent()->isOnline();
}

QString ResourceAdaptor::name()
{
    // handle method call org.kde.Akonadi.Resource.name
    return parent()->name();
}

uint ResourceAdaptor::progress()
{
    // handle method call org.kde.Akonadi.Resource.progress
    return parent()->progress();
}

QString ResourceAdaptor::progressMessage()
{
    // handle method call org.kde.Akonadi.Resource.progressMessage
    return parent()->progressMessage();
}

void ResourceAdaptor::quit()
{
    // handle method call org.kde.Akonadi.Resource.quit
    parent()->quit();
}

bool ResourceAdaptor::requestItemDelivery(int uid, const QString &remoteId, int type, const QDBusMessage &msg)
{
    // handle method call org.kde.Akonadi.Resource.requestItemDelivery
    return parent()->requestItemDelivery(uid, remoteId, type, msg);
}

void ResourceAdaptor::setName(const QString &name)
{
    // handle method call org.kde.Akonadi.Resource.setName
    parent()->setName(name);
}

void ResourceAdaptor::setOnline(bool state)
{
    // handle method call org.kde.Akonadi.Resource.setOnline
    parent()->setOnline(state);
}

int ResourceAdaptor::status()
{
    // handle method call org.kde.Akonadi.Resource.status
    return parent()->status();
}

QString ResourceAdaptor::statusMessage()
{
    // handle method call org.kde.Akonadi.Resource.statusMessage
    return parent()->statusMessage();
}

void ResourceAdaptor::synchronize()
{
    // handle method call org.kde.Akonadi.Resource.synchronize
    parent()->synchronize();
}


#include "resourceadaptor.moc"
