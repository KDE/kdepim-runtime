/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _MEDIAFILELISTENTRY_H_
#define _MEDIAFILELISTENTRY_H_

namespace Nepomuk {
        class MediaList;
}

#include <nepomuk/resource.h>
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A single node in the list of media files contained within an MediaList 
 * instance. This class is intended to provide a type all those 
 * links have. In valid NRL untyped resources cannot be linked. 
 * There are no properties defined for this class but the application 
 * may expect rdf:first and rdf:last links. The former points 
 * to the DataObject instance, interpreted as Media the latter 
 * points at another MediaFileListEntr. At the end of the list 
 * there is a link to rdf:nil. 
 */
    class NEPOMUK_EXPORT MediaFileListEntry : public Resource
    {
    public:
        /**
         * Create a new empty and invalid MediaFileListEntry instance
         */
        MediaFileListEntry();
        /**
         * Default copy constructor
         */
        MediaFileListEntry( const MediaFileListEntry& );
        MediaFileListEntry( const Resource& );
        /**
         * Create a new MediaFileListEntry instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        MediaFileListEntry( const QString& uriOrIdentifier );
        /**
         * Create a new MediaFileListEntry instance representing the resource
         * referenced by \a uri.
         */
        MediaFileListEntry( const QUrl& uri );
        ~MediaFileListEntry();

        MediaFileListEntry& operator=( const MediaFileListEntry& );

            /**
             * Get all resources that have this resource set as property 'MediaFileListEntry'. 
             * This property is intended to point to an RDF list of MediaFiles. 
             * \sa ResourceManager::allResourcesWithProperty 
             */
            QList<MediaList> mediaFileListEntryOf() const;

            /**
             * Retrieve a list of all available MediaFileListEntry resources. 
             * This list consists of all resource of type MediaFileListEntry 
             * that are stored in the local Nepomuk meta data storage and any 
             * changes made locally. Be aware that in some cases this list can 
             * get very big. Then it might be better to use libKNep directly. 
             */
            static QList<MediaFileListEntry> allMediaFileListEntrys();


        /**
         * \return The URI of the resource type that is used in MediaFileListEntry instances.
         */
        static QString resourceTypeUri();

    protected:
       MediaFileListEntry( const QString& uri, const QUrl& type );
       MediaFileListEntry( const QUrl& uri, const QUrl& type );
   };
}

#endif
