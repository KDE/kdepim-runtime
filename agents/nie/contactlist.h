/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _CONTACTLIST_H_
#define _CONTACTLIST_H_

namespace Nepomuk {
        class ContactListDataObject;
}

#include "informationelement.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A contact list, this class represents an addressbook or a contact 
 * list of an IM application. Contacts inside a contact list can 
 * belong to contact groups. 
 */
    class NEPOMUK_EXPORT ContactList : public InformationElement
    {
    public:
        /**
         * Create a new empty and invalid ContactList instance
         */
        ContactList();
        /**
         * Default copy constructor
         */
        ContactList( const ContactList& );
        ContactList( const Resource& );
        /**
         * Create a new ContactList instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        ContactList( const QString& uriOrIdentifier );
        /**
         * Create a new ContactList instance representing the resource
         * referenced by \a uri.
         */
        ContactList( const QUrl& uri );
        ~ContactList();

        ContactList& operator=( const ContactList& );

            /**
             * Get property 'containsContact'. A property used to group contacts 
             * into contact groups. This property was NOT defined in the VCARD 
             * standard. See documentation for the 'ContactList' class for 
             * details 
             */
            QList<ContactListDataObject> containsContacts() const;

            /**
             * Set property 'containsContact'. A property used to group contacts 
             * into contact groups. This property was NOT defined in the VCARD 
             * standard. See documentation for the 'ContactList' class for 
             * details 
             */
            void setContainsContacts( const QList<ContactListDataObject>& value );

            /**
             * Add a value to property 'containsContact'. A property used 
             * to group contacts into contact groups. This property was NOT 
             * defined in the VCARD standard. See documentation for the 'ContactList' 
             * class for details 
             */
            void addContainsContact( const ContactListDataObject& value );

            /**
             * \return The URI of the property 'containsContact'. 
             */
            static QUrl containsContactUri();

            /**
             * Retrieve a list of all available ContactList resources. This 
             * list consists of all resource of type ContactList that are stored 
             * in the local Nepomuk meta data storage and any changes made locally. 
             * Be aware that in some cases this list can get very big. Then it 
             * might be better to use libKNep directly. 
             */
            static QList<ContactList> allContactLists();


        /**
         * \return The URI of the resource type that is used in ContactList instances.
         */
        static QString resourceTypeUri();

    protected:
       ContactList( const QString& uri, const QUrl& type );
       ContactList( const QUrl& uri, const QUrl& type );
   };
}

#endif
