/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _PHONENUMBER_H_
#define _PHONENUMBER_H_

namespace Nepomuk {
        class Role;
}

#include "contactmedium.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A telephone number. 
 */
    class NEPOMUK_EXPORT PhoneNumber : public ContactMedium
    {
    public:
        /**
         * Create a new empty and invalid PhoneNumber instance
         */
        PhoneNumber();
        /**
         * Default copy constructor
         */
        PhoneNumber( const PhoneNumber& );
        PhoneNumber( const Resource& );
        /**
         * Create a new PhoneNumber instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        PhoneNumber( const QString& uriOrIdentifier );
        /**
         * Create a new PhoneNumber instance representing the resource
         * referenced by \a uri.
         */
        PhoneNumber( const QUrl& uri );
        ~PhoneNumber();

        PhoneNumber& operator=( const PhoneNumber& );

            /**
             * Get property 'phoneNumber'. 
             */
            QStringList phoneNumbers() const;

            /**
             * Set property 'phoneNumber'. 
             */
            void setPhoneNumbers( const QStringList& value );

            /**
             * Add a value to property 'phoneNumber'. 
             */
            void addPhoneNumber( const QString& value );

            /**
             * \return The URI of the property 'phoneNumber'. 
             */
            static QUrl phoneNumberUri();

            /**
             * Get all resources that have this resource set as property 'PhoneNumber'. 
             * A number for telephony communication with the object represented 
             * by this Contact. An equivalent of the 'TEL' property defined 
             * in RFC 2426 Sec. 3.3.1 \sa ResourceManager::allResourcesWithProperty 
             */
            QList<Role> phoneNumberOf() const;

            /**
             * Retrieve a list of all available PhoneNumber resources. This 
             * list consists of all resource of type PhoneNumber that are stored 
             * in the local Nepomuk meta data storage and any changes made locally. 
             * Be aware that in some cases this list can get very big. Then it 
             * might be better to use libKNep directly. 
             */
            static QList<PhoneNumber> allPhoneNumbers();


        /**
         * \return The URI of the resource type that is used in PhoneNumber instances.
         */
        static QString resourceTypeUri();

    protected:
       PhoneNumber( const QString& uri, const QUrl& type );
       PhoneNumber( const QUrl& uri, const QUrl& type );
   };
}

#endif
