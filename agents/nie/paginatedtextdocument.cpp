/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk/tools.h>
#include <nepomuk/variant.h>
#include <nepomuk/resourcemanager.h>
#include "paginatedtextdocument.h"


Nepomuk::PaginatedTextDocument::PaginatedTextDocument()
  : TextDocument( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument") )
{
}


Nepomuk::PaginatedTextDocument::PaginatedTextDocument( const PaginatedTextDocument& res )
  : TextDocument( res )
{
}


Nepomuk::PaginatedTextDocument::PaginatedTextDocument( const Nepomuk::Resource& res )
  : TextDocument( res )
{
}


Nepomuk::PaginatedTextDocument::PaginatedTextDocument( const QString& uri )
  : TextDocument( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument") )
{
}

Nepomuk::PaginatedTextDocument::PaginatedTextDocument( const QUrl& uri )
  : TextDocument( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument") )
{
}

Nepomuk::PaginatedTextDocument::PaginatedTextDocument( const QString& uri, const QUrl& type )
  : TextDocument( uri, type )
{
}

Nepomuk::PaginatedTextDocument::PaginatedTextDocument( const QUrl& uri, const QUrl& type )
  : TextDocument( uri, type )
{
}

Nepomuk::PaginatedTextDocument::~PaginatedTextDocument()
{
}


Nepomuk::PaginatedTextDocument& Nepomuk::PaginatedTextDocument::operator=( const PaginatedTextDocument& res )
{
    Resource::operator=( res );
    return *this;
}


QString Nepomuk::PaginatedTextDocument::resourceTypeUri()
{
    return "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument";
}

QList<qint64> Nepomuk::PaginatedTextDocument::pageCounts() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#pageCount") ).toInt64List());
}

void Nepomuk::PaginatedTextDocument::setPageCounts( const QList<qint64>& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#pageCount"), Variant( value ) );
}

void Nepomuk::PaginatedTextDocument::addPageCount( const qint64& value )
{
    Variant v = property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#pageCount") );
    v.append( value );
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#pageCount"), v );
}

QUrl Nepomuk::PaginatedTextDocument::pageCountUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#pageCount");
}

QList<Nepomuk::PaginatedTextDocument> Nepomuk::PaginatedTextDocument::allPaginatedTextDocuments()
{
    return Nepomuk::convertResourceList<PaginatedTextDocument>( ResourceManager::instance()->allResourcesOfType( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#PaginatedTextDocument") ) );
}


