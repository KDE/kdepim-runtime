/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _POSTALADDRESS_H_
#define _POSTALADDRESS_H_

namespace Nepomuk {
        class Role;
}

#include "contactmedium.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A postal address. A class aggregating the various parts of a 
 * value for the 'ADR' property as defined in RFC 2426 Sec. 3.2.1. 
 */
    class NEPOMUK_EXPORT PostalAddress : public ContactMedium
    {
    public:
        /**
         * Create a new empty and invalid PostalAddress instance
         */
        PostalAddress();
        /**
         * Default copy constructor
         */
        PostalAddress( const PostalAddress& );
        PostalAddress( const Resource& );
        /**
         * Create a new PostalAddress instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        PostalAddress( const QString& uriOrIdentifier );
        /**
         * Create a new PostalAddress instance representing the resource
         * referenced by \a uri.
         */
        PostalAddress( const QUrl& uri );
        ~PostalAddress();

        PostalAddress& operator=( const PostalAddress& );

            /**
             * Get property 'streetAddress'. The streed address. Inspired 
             * by the third part of the value of the 'ADR' property as defined 
             * in RFC 2426, sec. 3.2.1 
             */
            QStringList streetAddresses() const;

            /**
             * Set property 'streetAddress'. The streed address. Inspired 
             * by the third part of the value of the 'ADR' property as defined 
             * in RFC 2426, sec. 3.2.1 
             */
            void setStreetAddresses( const QStringList& value );

            /**
             * Add a value to property 'streetAddress'. The streed address. 
             * Inspired by the third part of the value of the 'ADR' property 
             * as defined in RFC 2426, sec. 3.2.1 
             */
            void addStreetAddress( const QString& value );

            /**
             * \return The URI of the property 'streetAddress'. 
             */
            static QUrl streetAddressUri();

            /**
             * Get property 'addressLocation'. The geographical location 
             * of a postal address. 
             */
            QStringList addressLocations() const;

            /**
             * Set property 'addressLocation'. The geographical location 
             * of a postal address. 
             */
            void setAddressLocations( const QStringList& value );

            /**
             * Add a value to property 'addressLocation'. The geographical 
             * location of a postal address. 
             */
            void addAddressLocation( const QString& value );

            /**
             * \return The URI of the property 'addressLocation'. 
             */
            static QUrl addressLocationUri();

            /**
             * Get property 'postalcode'. Postal Code. Inspired by the sixth 
             * part of the value of the 'ADR' property as defined in RFC 2426, 
             * sec. 3.2.1 
             */
            QString postalcode() const;

            /**
             * Set property 'postalcode'. Postal Code. Inspired by the sixth 
             * part of the value of the 'ADR' property as defined in RFC 2426, 
             * sec. 3.2.1 
             */
            void setPostalcode( const QString& value );

            /**
             * \return The URI of the property 'postalcode'. 
             */
            static QUrl postalcodeUri();

            /**
             * Get property 'locality'. Locality or City. Inspired by the 
             * fourth part of the value of the 'ADR' property as defined in RFC 
             * 2426, sec. 3.2.1 
             */
            QString locality() const;

            /**
             * Set property 'locality'. Locality or City. Inspired by the 
             * fourth part of the value of the 'ADR' property as defined in RFC 
             * 2426, sec. 3.2.1 
             */
            void setLocality( const QString& value );

            /**
             * \return The URI of the property 'locality'. 
             */
            static QUrl localityUri();

            /**
             * Get property 'region'. Region. Inspired by the fifth part of 
             * the value of the 'ADR' property as defined in RFC 2426, sec. 3.2.1 
             */
            QString region() const;

            /**
             * Set property 'region'. Region. Inspired by the fifth part of 
             * the value of the 'ADR' property as defined in RFC 2426, sec. 3.2.1 
             */
            void setRegion( const QString& value );

            /**
             * \return The URI of the property 'region'. 
             */
            static QUrl regionUri();

            /**
             * Get property 'pobox'. Post office box. This is the first part 
             * of the value of the 'ADR' property as defined in RFC 2426, sec. 
             * 3.2.1 
             */
            QStringList poboxs() const;

            /**
             * Set property 'pobox'. Post office box. This is the first part 
             * of the value of the 'ADR' property as defined in RFC 2426, sec. 
             * 3.2.1 
             */
            void setPoboxs( const QStringList& value );

            /**
             * Add a value to property 'pobox'. Post office box. This is the 
             * first part of the value of the 'ADR' property as defined in RFC 
             * 2426, sec. 3.2.1 
             */
            void addPobox( const QString& value );

            /**
             * \return The URI of the property 'pobox'. 
             */
            static QUrl poboxUri();

            /**
             * Get property 'country'. A part of an address specyfing the country. 
             * Inspired by the seventh part of the value of the 'ADR' property 
             * as defined in RFC 2426, sec. 3.2.1 
             */
            QString country() const;

            /**
             * Set property 'country'. A part of an address specyfing the country. 
             * Inspired by the seventh part of the value of the 'ADR' property 
             * as defined in RFC 2426, sec. 3.2.1 
             */
            void setCountry( const QString& value );

            /**
             * \return The URI of the property 'country'. 
             */
            static QUrl countryUri();

            /**
             * Get property 'extendedAddress'. An extended part of an address. 
             * This field might be used to express parts of an address that aren't 
             * include in the name of the Contact but also aren't part of the 
             * actual location. Usually the streed address and following 
             * fields are enough for a postal letter to arrive. Examples may 
             * include ('University of California Campus building 45', 'Sears 
             * Tower 34th floor' etc.) Inspired by the second part of the value 
             * of the 'ADR' property as defined in RFC 2426, sec. 3.2.1 
             */
            QStringList extendedAddresses() const;

            /**
             * Set property 'extendedAddress'. An extended part of an address. 
             * This field might be used to express parts of an address that aren't 
             * include in the name of the Contact but also aren't part of the 
             * actual location. Usually the streed address and following 
             * fields are enough for a postal letter to arrive. Examples may 
             * include ('University of California Campus building 45', 'Sears 
             * Tower 34th floor' etc.) Inspired by the second part of the value 
             * of the 'ADR' property as defined in RFC 2426, sec. 3.2.1 
             */
            void setExtendedAddresses( const QStringList& value );

            /**
             * Add a value to property 'extendedAddress'. An extended part 
             * of an address. This field might be used to express parts of an 
             * address that aren't include in the name of the Contact but also 
             * aren't part of the actual location. Usually the streed address 
             * and following fields are enough for a postal letter to arrive. 
             * Examples may include ('University of California Campus building 
             * 45', 'Sears Tower 34th floor' etc.) Inspired by the second part 
             * of the value of the 'ADR' property as defined in RFC 2426, sec. 
             * 3.2.1 
             */
            void addExtendedAddress( const QString& value );

            /**
             * \return The URI of the property 'extendedAddress'. 
             */
            static QUrl extendedAddressUri();

            /**
             * Get all resources that have this resource set as property 'PostalAddress'. 
             * The default Address for a Contact. An equivalent of the 'ADR' 
             * property as defined in RFC 2426 Sec. 3.2.1. \sa ResourceManager::allResourcesWithProperty 
             */
            QList<Role> postalAddressOf() const;

            /**
             * Retrieve a list of all available PostalAddress resources. 
             * This list consists of all resource of type PostalAddress that 
             * are stored in the local Nepomuk meta data storage and any changes 
             * made locally. Be aware that in some cases this list can get very 
             * big. Then it might be better to use libKNep directly. 
             */
            static QList<PostalAddress> allPostalAddresss();


        /**
         * \return The URI of the resource type that is used in PostalAddress instances.
         */
        static QString resourceTypeUri();

    protected:
       PostalAddress( const QString& uri, const QUrl& type );
       PostalAddress( const QUrl& uri, const QUrl& type );
   };
}

#endif
