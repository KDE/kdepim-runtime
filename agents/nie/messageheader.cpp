/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk/tools.h>
#include <nepomuk/variant.h>
#include <nepomuk/resourcemanager.h>
#include "messageheader.h"

#include "message.h"
Nepomuk::MessageHeader::MessageHeader()
  : Resource( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MessageHeader") )
{
}


Nepomuk::MessageHeader::MessageHeader( const MessageHeader& res )
  : Resource( res )
{
}


Nepomuk::MessageHeader::MessageHeader( const Nepomuk::Resource& res )
  : Resource( res )
{
}


Nepomuk::MessageHeader::MessageHeader( const QString& uri )
  : Resource( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MessageHeader") )
{
}

Nepomuk::MessageHeader::MessageHeader( const QUrl& uri )
  : Resource( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MessageHeader") )
{
}

Nepomuk::MessageHeader::MessageHeader( const QString& uri, const QUrl& type )
  : Resource( uri, type )
{
}

Nepomuk::MessageHeader::MessageHeader( const QUrl& uri, const QUrl& type )
  : Resource( uri, type )
{
}

Nepomuk::MessageHeader::~MessageHeader()
{
}


Nepomuk::MessageHeader& Nepomuk::MessageHeader::operator=( const MessageHeader& res )
{
    Resource::operator=( res );
    return *this;
}


QString Nepomuk::MessageHeader::resourceTypeUri()
{
    return "http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MessageHeader";
}

QString Nepomuk::MessageHeader::headerName() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#headerName") ).toStringList() << QString() ).first();
}

void Nepomuk::MessageHeader::setHeaderName( const QString& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#headerName"), Variant( value ) );
}

QUrl Nepomuk::MessageHeader::headerNameUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#headerName");
}

QString Nepomuk::MessageHeader::headerValue() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#headerValue") ).toStringList() << QString() ).first();
}

void Nepomuk::MessageHeader::setHeaderValue( const QString& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#headerValue"), Variant( value ) );
}

QUrl Nepomuk::MessageHeader::headerValueUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#headerValue");
}

QList<Nepomuk::Message> Nepomuk::MessageHeader::messageHeaderOf() const
{
    return convertResourceList<Message>( ResourceManager::instance()->allResourcesWithProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#messageHeader"), *this ) );
}

QList<Nepomuk::MessageHeader> Nepomuk::MessageHeader::allMessageHeaders()
{
    return Nepomuk::convertResourceList<MessageHeader>( ResourceManager::instance()->allResourcesOfType( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nmo#MessageHeader") ) );
}


