/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk/tools.h>
#include <nepomuk/variant.h>
#include <nepomuk/resourcemanager.h>
#include "remoteportaddress.h"


Nepomuk::RemotePortAddress::RemotePortAddress()
  : DataObject( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RemotePortAddress") )
{
}


Nepomuk::RemotePortAddress::RemotePortAddress( const RemotePortAddress& res )
  : DataObject( res )
{
}


Nepomuk::RemotePortAddress::RemotePortAddress( const Nepomuk::Resource& res )
  : DataObject( res )
{
}


Nepomuk::RemotePortAddress::RemotePortAddress( const QString& uri )
  : DataObject( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RemotePortAddress") )
{
}

Nepomuk::RemotePortAddress::RemotePortAddress( const QUrl& uri )
  : DataObject( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RemotePortAddress") )
{
}

Nepomuk::RemotePortAddress::RemotePortAddress( const QString& uri, const QUrl& type )
  : DataObject( uri, type )
{
}

Nepomuk::RemotePortAddress::RemotePortAddress( const QUrl& uri, const QUrl& type )
  : DataObject( uri, type )
{
}

Nepomuk::RemotePortAddress::~RemotePortAddress()
{
}


Nepomuk::RemotePortAddress& Nepomuk::RemotePortAddress::operator=( const RemotePortAddress& res )
{
    Resource::operator=( res );
    return *this;
}


QString Nepomuk::RemotePortAddress::resourceTypeUri()
{
    return "http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RemotePortAddress";
}

QList<Nepomuk::RemotePortAddress> Nepomuk::RemotePortAddress::allRemotePortAddresss()
{
    return Nepomuk::convertResourceList<RemotePortAddress>( ResourceManager::instance()->allResourcesOfType( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#RemotePortAddress") ) );
}


