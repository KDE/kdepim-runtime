/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _MESSAGINGNUMBER_H_
#define _MESSAGINGNUMBER_H_

namespace Nepomuk {
}

#include "phonenumber.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A number that can accept textual messages. 
 */
    class NEPOMUK_EXPORT MessagingNumber : public PhoneNumber
    {
    public:
        /**
         * Create a new empty and invalid MessagingNumber instance
         */
        MessagingNumber();
        /**
         * Default copy constructor
         */
        MessagingNumber( const MessagingNumber& );
        MessagingNumber( const Resource& );
        /**
         * Create a new MessagingNumber instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        MessagingNumber( const QString& uriOrIdentifier );
        /**
         * Create a new MessagingNumber instance representing the resource
         * referenced by \a uri.
         */
        MessagingNumber( const QUrl& uri );
        ~MessagingNumber();

        MessagingNumber& operator=( const MessagingNumber& );

            /**
             * Retrieve a list of all available MessagingNumber resources. 
             * This list consists of all resource of type MessagingNumber 
             * that are stored in the local Nepomuk meta data storage and any 
             * changes made locally. Be aware that in some cases this list can 
             * get very big. Then it might be better to use libKNep directly. 
             */
            static QList<MessagingNumber> allMessagingNumbers();


        /**
         * \return The URI of the resource type that is used in MessagingNumber instances.
         */
        static QString resourceTypeUri();

    protected:
       MessagingNumber( const QString& uri, const QUrl& type );
       MessagingNumber( const QUrl& uri, const QUrl& type );
   };
}

#endif
