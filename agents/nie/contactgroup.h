/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _CONTACTGROUP_H_
#define _CONTACTGROUP_H_

namespace Nepomuk {
        class Contact;
}

#include "informationelement.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A group of Contacts. Could be used to express a group in an addressbook 
 * or on a contact list of an IM application. One contact can belong 
 * to many groups. 
 */
    class NEPOMUK_EXPORT ContactGroup : public InformationElement
    {
    public:
        /**
         * Create a new empty and invalid ContactGroup instance
         */
        ContactGroup();
        /**
         * Default copy constructor
         */
        ContactGroup( const ContactGroup& );
        ContactGroup( const Resource& );
        /**
         * Create a new ContactGroup instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        ContactGroup( const QString& uriOrIdentifier );
        /**
         * Create a new ContactGroup instance representing the resource
         * referenced by \a uri.
         */
        ContactGroup( const QUrl& uri );
        ~ContactGroup();

        ContactGroup& operator=( const ContactGroup& );

            /**
             * Get property 'contactGroupName'. The name of the contact group. 
             * This property was NOT defined in the VCARD standard. See documentation 
             * of the 'ContactGroup' class for details 
             */
            QString contactGroupName() const;

            /**
             * Set property 'contactGroupName'. The name of the contact group. 
             * This property was NOT defined in the VCARD standard. See documentation 
             * of the 'ContactGroup' class for details 
             */
            void setContactGroupName( const QString& value );

            /**
             * \return The URI of the property 'contactGroupName'. 
             */
            static QUrl contactGroupNameUri();

            /**
             * Get all resources that have this resource set as property 'belongsToGroup'. 
             * Links a Contact with a ContactGroup it belongs to. \sa ResourceManager::allResourcesWithProperty 
             */
            QList<Contact> belongsToGroupOf() const;

            /**
             * Retrieve a list of all available ContactGroup resources. This 
             * list consists of all resource of type ContactGroup that are 
             * stored in the local Nepomuk meta data storage and any changes 
             * made locally. Be aware that in some cases this list can get very 
             * big. Then it might be better to use libKNep directly. 
             */
            static QList<ContactGroup> allContactGroups();


        /**
         * \return The URI of the resource type that is used in ContactGroup instances.
         */
        static QString resourceTypeUri();

    protected:
       ContactGroup( const QString& uri, const QUrl& type );
       ContactGroup( const QUrl& uri, const QUrl& type );
   };
}

#endif
