/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _EMAILADDRESS_H_
#define _EMAILADDRESS_H_

namespace Nepomuk {
        class Role;
}

#include "contactmedium.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * An email address. The recommended best practice is to use mailto: 
 * uris for instances of this class. 
 */
    class NEPOMUK_EXPORT EmailAddress : public ContactMedium
    {
    public:
        /**
         * Create a new empty and invalid EmailAddress instance
         */
        EmailAddress();
        /**
         * Default copy constructor
         */
        EmailAddress( const EmailAddress& );
        EmailAddress( const Resource& );
        /**
         * Create a new EmailAddress instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        EmailAddress( const QString& uriOrIdentifier );
        /**
         * Create a new EmailAddress instance representing the resource
         * referenced by \a uri.
         */
        EmailAddress( const QUrl& uri );
        ~EmailAddress();

        EmailAddress& operator=( const EmailAddress& );

            /**
             * Get property 'emailAddress'. 
             */
            QString emailAddress() const;

            /**
             * Set property 'emailAddress'. 
             */
            void setEmailAddress( const QString& value );

            /**
             * \return The URI of the property 'emailAddress'. 
             */
            static QUrl emailAddressUri();

            /**
             * Get all resources that have this resource set as property 'EmailAddress'. 
             * An address for electronic mail communication with the object 
             * specified by this contact. An equivalent of the 'EMAIL' property 
             * as defined in RFC 2426 Sec. 3.3.1. \sa ResourceManager::allResourcesWithProperty 
             */
            QList<Role> emailAddressOf() const;

            /**
             * Retrieve a list of all available EmailAddress resources. This 
             * list consists of all resource of type EmailAddress that are 
             * stored in the local Nepomuk meta data storage and any changes 
             * made locally. Be aware that in some cases this list can get very 
             * big. Then it might be better to use libKNep directly. 
             */
            static QList<EmailAddress> allEmailAddresss();


        /**
         * \return The URI of the resource type that is used in EmailAddress instances.
         */
        static QString resourceTypeUri();

    protected:
       EmailAddress( const QString& uri, const QUrl& type );
       EmailAddress( const QUrl& uri, const QUrl& type );
   };
}

#endif
