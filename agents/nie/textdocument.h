/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _TEXTDOCUMENT_H_
#define _TEXTDOCUMENT_H_

namespace Nepomuk {
}

#include "document.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A text document 
 */
    class NEPOMUK_EXPORT TextDocument : public Document
    {
    public:
        /**
         * Create a new empty and invalid TextDocument instance
         */
        TextDocument();
        /**
         * Default copy constructor
         */
        TextDocument( const TextDocument& );
        TextDocument( const Resource& );
        /**
         * Create a new TextDocument instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        TextDocument( const QString& uriOrIdentifier );
        /**
         * Create a new TextDocument instance representing the resource
         * referenced by \a uri.
         */
        TextDocument( const QUrl& uri );
        ~TextDocument();

        TextDocument& operator=( const TextDocument& );

            /**
             * Get property 'wordCount'. The amount of words in a text document. 
             */
            QList<qint64> wordCounts() const;

            /**
             * Set property 'wordCount'. The amount of words in a text document. 
             */
            void setWordCounts( const QList<qint64>& value );

            /**
             * Add a value to property 'wordCount'. The amount of words in a 
             * text document. 
             */
            void addWordCount( const qint64& value );

            /**
             * \return The URI of the property 'wordCount'. 
             */
            static QUrl wordCountUri();

            /**
             * Get property 'lineCount'. The amount of lines in a text document 
             */
            QList<qint64> lineCounts() const;

            /**
             * Set property 'lineCount'. The amount of lines in a text document 
             */
            void setLineCounts( const QList<qint64>& value );

            /**
             * Add a value to property 'lineCount'. The amount of lines in a 
             * text document 
             */
            void addLineCount( const qint64& value );

            /**
             * \return The URI of the property 'lineCount'. 
             */
            static QUrl lineCountUri();

            /**
             * Get property 'characterCount'. The amount of characters in 
             * the document. 
             */
            QList<qint64> characterCounts() const;

            /**
             * Set property 'characterCount'. The amount of characters in 
             * the document. 
             */
            void setCharacterCounts( const QList<qint64>& value );

            /**
             * Add a value to property 'characterCount'. The amount of characters 
             * in the document. 
             */
            void addCharacterCount( const qint64& value );

            /**
             * \return The URI of the property 'characterCount'. 
             */
            static QUrl characterCountUri();

            /**
             * Retrieve a list of all available TextDocument resources. This 
             * list consists of all resource of type TextDocument that are 
             * stored in the local Nepomuk meta data storage and any changes 
             * made locally. Be aware that in some cases this list can get very 
             * big. Then it might be better to use libKNep directly. 
             */
            static QList<TextDocument> allTextDocuments();


        /**
         * \return The URI of the resource type that is used in TextDocument instances.
         */
        static QString resourceTypeUri();

    protected:
       TextDocument( const QString& uri, const QUrl& type );
       TextDocument( const QUrl& uri, const QUrl& type );
   };
}

#endif
