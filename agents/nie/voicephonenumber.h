/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _VOICEPHONENUMBER_H_
#define _VOICEPHONENUMBER_H_

namespace Nepomuk {
}

#include "phonenumber.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A telephone number with voice communication capabilities. 
 * Class inspired by the TYPE=voice parameter of the TEL property 
 * defined in RFC 2426 sec. 3.3.1 
 */
    class NEPOMUK_EXPORT VoicePhoneNumber : public PhoneNumber
    {
    public:
        /**
         * Create a new empty and invalid VoicePhoneNumber instance
         */
        VoicePhoneNumber();
        /**
         * Default copy constructor
         */
        VoicePhoneNumber( const VoicePhoneNumber& );
        VoicePhoneNumber( const Resource& );
        /**
         * Create a new VoicePhoneNumber instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        VoicePhoneNumber( const QString& uriOrIdentifier );
        /**
         * Create a new VoicePhoneNumber instance representing the resource
         * referenced by \a uri.
         */
        VoicePhoneNumber( const QUrl& uri );
        ~VoicePhoneNumber();

        VoicePhoneNumber& operator=( const VoicePhoneNumber& );

            /**
             * Get property 'voiceMail'. Indicates if the given number accepts 
             * voice mail. (e.g. there is an answering machine). Inspired 
             * by TYPE=msg parameter of the TEL property defined in RFC 2426 
             * sec. 3.3.1 
             */
            QList<bool> voiceMails() const;

            /**
             * Set property 'voiceMail'. Indicates if the given number accepts 
             * voice mail. (e.g. there is an answering machine). Inspired 
             * by TYPE=msg parameter of the TEL property defined in RFC 2426 
             * sec. 3.3.1 
             */
            void setVoiceMails( const QList<bool>& value );

            /**
             * Add a value to property 'voiceMail'. Indicates if the given 
             * number accepts voice mail. (e.g. there is an answering machine). 
             * Inspired by TYPE=msg parameter of the TEL property defined 
             * in RFC 2426 sec. 3.3.1 
             */
            void addVoiceMail( const bool& value );

            /**
             * \return The URI of the property 'voiceMail'. 
             */
            static QUrl voiceMailUri();

            /**
             * Retrieve a list of all available VoicePhoneNumber resources. 
             * This list consists of all resource of type VoicePhoneNumber 
             * that are stored in the local Nepomuk meta data storage and any 
             * changes made locally. Be aware that in some cases this list can 
             * get very big. Then it might be better to use libKNep directly. 
             */
            static QList<VoicePhoneNumber> allVoicePhoneNumbers();


        /**
         * \return The URI of the resource type that is used in VoicePhoneNumber instances.
         */
        static QString resourceTypeUri();

    protected:
       VoicePhoneNumber( const QString& uri, const QUrl& type );
       VoicePhoneNumber( const QUrl& uri, const QUrl& type );
   };
}

#endif
