/*
 *
 * $Id: $
 *
 * This file is part of the Nepomuk KDE project.
 * Copyright (C) 2007 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk/tools.h>
#include <nepomuk/variant.h>
#include <nepomuk/resourcemanager.h>
#include "postaladdress.h"

#include "role.h"
Nepomuk::PostalAddress::PostalAddress()
  : ContactMedium( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#PostalAddress") )
{
}


Nepomuk::PostalAddress::PostalAddress( const PostalAddress& res )
  : ContactMedium( res )
{
}


Nepomuk::PostalAddress::PostalAddress( const Nepomuk::Resource& res )
  : ContactMedium( res )
{
}


Nepomuk::PostalAddress::PostalAddress( const QString& uri )
  : ContactMedium( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#PostalAddress") )
{
}

Nepomuk::PostalAddress::PostalAddress( const QUrl& uri )
  : ContactMedium( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#PostalAddress") )
{
}

Nepomuk::PostalAddress::PostalAddress( const QString& uri, const QUrl& type )
  : ContactMedium( uri, type )
{
}

Nepomuk::PostalAddress::PostalAddress( const QUrl& uri, const QUrl& type )
  : ContactMedium( uri, type )
{
}

Nepomuk::PostalAddress::~PostalAddress()
{
}


Nepomuk::PostalAddress& Nepomuk::PostalAddress::operator=( const PostalAddress& res )
{
    Resource::operator=( res );
    return *this;
}


QString Nepomuk::PostalAddress::resourceTypeUri()
{
    return "http://www.semanticdesktop.org/ontologies/2007/03/22/nco#PostalAddress";
}

QStringList Nepomuk::PostalAddress::streetAddresses() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#streetAddress") ).toStringList());
}

void Nepomuk::PostalAddress::setStreetAddresses( const QStringList& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#streetAddress"), Variant( value ) );
}

void Nepomuk::PostalAddress::addStreetAddress( const QString& value )
{
    Variant v = property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#streetAddress") );
    v.append( value );
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#streetAddress"), v );
}

QUrl Nepomuk::PostalAddress::streetAddressUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#streetAddress");
}

QStringList Nepomuk::PostalAddress::addressLocations() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#addressLocation") ).toStringList());
}

void Nepomuk::PostalAddress::setAddressLocations( const QStringList& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#addressLocation"), Variant( value ) );
}

void Nepomuk::PostalAddress::addAddressLocation( const QString& value )
{
    Variant v = property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#addressLocation") );
    v.append( value );
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#addressLocation"), v );
}

QUrl Nepomuk::PostalAddress::addressLocationUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#addressLocation");
}

QString Nepomuk::PostalAddress::postalcode() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#postalcode") ).toStringList() << QString() ).first();
}

void Nepomuk::PostalAddress::setPostalcode( const QString& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#postalcode"), Variant( value ) );
}

QUrl Nepomuk::PostalAddress::postalcodeUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#postalcode");
}

QString Nepomuk::PostalAddress::locality() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#locality") ).toStringList() << QString() ).first();
}

void Nepomuk::PostalAddress::setLocality( const QString& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#locality"), Variant( value ) );
}

QUrl Nepomuk::PostalAddress::localityUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#locality");
}

QString Nepomuk::PostalAddress::region() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#region") ).toStringList() << QString() ).first();
}

void Nepomuk::PostalAddress::setRegion( const QString& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#region"), Variant( value ) );
}

QUrl Nepomuk::PostalAddress::regionUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#region");
}

QStringList Nepomuk::PostalAddress::poboxs() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#pobox") ).toStringList());
}

void Nepomuk::PostalAddress::setPoboxs( const QStringList& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#pobox"), Variant( value ) );
}

void Nepomuk::PostalAddress::addPobox( const QString& value )
{
    Variant v = property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#pobox") );
    v.append( value );
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#pobox"), v );
}

QUrl Nepomuk::PostalAddress::poboxUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#pobox");
}

QString Nepomuk::PostalAddress::country() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#country") ).toStringList() << QString() ).first();
}

void Nepomuk::PostalAddress::setCountry( const QString& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#country"), Variant( value ) );
}

QUrl Nepomuk::PostalAddress::countryUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#country");
}

QStringList Nepomuk::PostalAddress::extendedAddresses() const
{
    return ( property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#extendedAddress") ).toStringList());
}

void Nepomuk::PostalAddress::setExtendedAddresses( const QStringList& value )
{
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#extendedAddress"), Variant( value ) );
}

void Nepomuk::PostalAddress::addExtendedAddress( const QString& value )
{
    Variant v = property( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#extendedAddress") );
    v.append( value );
    setProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#extendedAddress"), v );
}

QUrl Nepomuk::PostalAddress::extendedAddressUri()
{
    return QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#extendedAddress");
}

QList<Nepomuk::Role> Nepomuk::PostalAddress::postalAddressOf() const
{
    return convertResourceList<Role>( ResourceManager::instance()->allResourcesWithProperty( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#hasPostalAddress"), *this ) );
}

QList<Nepomuk::PostalAddress> Nepomuk::PostalAddress::allPostalAddresss()
{
    return Nepomuk::convertResourceList<PostalAddress>( ResourceManager::instance()->allResourcesOfType( QUrl("http://www.semanticdesktop.org/ontologies/2007/03/22/nco#PostalAddress") ) );
}


