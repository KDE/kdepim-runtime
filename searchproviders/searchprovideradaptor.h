/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -a searchprovideradaptor -c SearchProviderAdaptor -i searchproviderbase.h -l SearchProviderBase -m org.kde.Akonadi.SearchProvider.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SEARCHPROVIDERADAPTOR_H_1159882543
#define SEARCHPROVIDERADAPTOR_H_1159882543

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "searchproviderbase.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.Akonadi.SearchProvider
 */
class SearchProviderAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.Akonadi.SearchProvider")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.Akonadi.SearchProvider\" >\n"
"    <method name=\"addSearch\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"targetCollection\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"searchQuery\" />\n"
"    </method>\n"
"    <method name=\"removeSearch\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"collection\" />\n"
"    </method>\n"
"    <method name=\"fetchResponse\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"      <arg direction=\"in\" type=\"as\" name=\"uids\" />\n"
"<!--       FIXME type ai doesn't work with qdbus binding --><!--       <arg name=\"uids\" type=\"ai\" direction=\"in\"/> --><!--       <annotation name=\"com.trolltech.QtDBus.QtTypeName.In0\" value=\"QList&lt;int&gt;\"/> -->      <arg direction=\"in\" type=\"s\" name=\"field\" />\n"
"    </method>\n"
"    <method name=\"quit\" />\n"
"  </interface>\n"
        "")
public:
    SearchProviderAdaptor(Akonadi::SearchProviderBase *parent);
    virtual ~SearchProviderAdaptor();

    inline Akonadi::SearchProviderBase *parent() const
    { return static_cast<Akonadi::SearchProviderBase *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool addSearch(const QString &targetCollection, const QString &searchQuery, const QDBusMessage &msg);
    QStringList fetchResponse(const QStringList &uids, const QString &field, const QDBusMessage &msg);
    void quit();
    bool removeSearch(const QString &collection);
Q_SIGNALS: // SIGNALS
};

#endif
