


Interesting facts:
--------------------

- the store keeps all items in the same table, regardless of mimetype or folder
- uids are globally unique, it's thus possible to retrieve an item without knowing the
  folder it is in
- the hierarchy of collections ( folders ) starts at "/", with the first level being the 
  available resources, regardless of the mimetypes they contain. Internally
  the resource prefixes are cut off of the paths, such that "/resource1/toplevel/foo"
  on the client side becomes "/toplevel/foo" inside the store
- To communicate mimetype constraints in fetch and list and their responses the
  IMAP flags mechanism is used. Unknown flags should be ignored by non-Akonadi
  IMAP clients, which keeps compatibility with mutt and regular KMail. Example:
	List:
	0x8053c68 8 LIST "" "res1/foo/%"
	0x8053c68 * LIST (\MimeTypes[text/calendar,directory/inode]) "/" "res1/foo/bar" 

	Fetch:
	0x8056310 7 UID FETCH 22 (UID RFC822.SIZE FLAGS BODY.PEEK[])
	0x8056310 * 1 FETCH (FLAGS (\Seen \MimeTypes[message/rfc822]) RFC822 {2450} From: Till Adam To: ...


How does lazy loading work?
-----------------------------------



How does a sync work?
-----------------------------


