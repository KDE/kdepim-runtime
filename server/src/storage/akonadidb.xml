<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2006 Volker Krause <vkrause@kde.org>
    Copyright (C) 2006 by Tobias Koenig <tokoe@kde.org>

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Library General Public License as published by
    the Free Software Foundation; either version 2 of the License, or (at your
    option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
    License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to the
    Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
    02110-1301, USA.

-->


<!--
  Akonadi Database Schema Definition

  This file is used to generate database access code as well as the tables itself.

  Database element (root node, can contain table and relation elements)

  Table attributes (can contain column, reference and data elements)
  - name: The entity class name, the table will be named FooTable.
  - properties: additional SQL properties such as foreign keys

  Column attributes:
  - name: The column name, will be also used as accessor name in the entity class.
  - type: The C++ type of this column, the SQL type will be derived from that.
  - sqltype: The SQL type (optional), overwrites types derived from the C++ type.
  - default: Default value for entity class constructor.
  - refTable, refColumn: foreign key, also used to generate accessor methods for 1:n relations
  - methodName: method name to access referred records, the table name is used if not given
  - properties: SQL properties such as constraints

  Indices:
  - name: The name of the index
  - columns: The columns covered by this index
  - unique: bool, indicates if this index must contain unique data

  Reference attributes (indication n:1 relations)
  - name: Used for naming the method during code generation
  - table: name of the table a n:1 relation exist
  - key: column name of the referenced table containing the foreign key

  Initial data:
  - columns: A comma separated list of column names
  - values: A comma separated and SQL-quoted list of values

  Relation elements define a n:m relation between two tables.
  Attributes:
  - table[12]: Table names
  - column[12]: Column names

-->
<database>

  <table name="SchemaVersion">
    <comment>Contains the schema version of the database.</comment>
    <column name="version" type="int" default="0" properties="NOT NULL"/>
    <data columns="version" values="7"/>
  </table>

  <table name="Resource">
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="name" type="QString" sqltype="VARCHAR(255)" properties="BINARY NOT NULL UNIQUE"/>
    <reference name="locations" table="Location" key="resourceId"/>
    <data columns="name" values="'akonadi_search_resource'"/>
  </table>

  <table name="Location">
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="remoteId" type="QString"/>
    <column name="name" type="QString" sqltype="VARCHAR(255)" properties="BINARY character set utf8 collate utf8_bin NOT NULL"/>
    <column name="parentId" type="qint64" refTable="Location" refColumn="id" methodName="parent" properties="DEFAULT 0 REFERENCES Location(id)"/>
    <column name="resourceId" type="qint64" refTable="Resource" refColumn="id" properties="NOT NULL REFERENCES Resource(id)"/>
    <column name="subscribed" type="bool" default="true" properties="NOT NULL DEFAULT true"/>
    <column name="cachePolicyInherit" type="bool" default="true" properties="NOT NULL DEFAULT true"/>
    <column name="cachePolicyCheckInterval" type="int" default="-1" properties="NOT NULL DEFAULT -1"/>
    <column name="cachePolicyCacheTimeout" type="int" default="-1" properties="NOT NULL DEFAULT -1"/>
    <column name="cachePolicySyncOnDemand" type="bool" default="false" properties="NOT NULL DEFAULT false"/>
    <column name="cachePolicyLocalParts" type="QString"/>
    <index name="parentAndNameIndex" columns="parentId,name" unique="true"/>
    <reference name="children" table="Location" key="parentId"/>
    <reference name="items" table="PimItem" key="locationId"/>
    <reference name="attributes" table="LocationAttribute" key="locationId"/>
    <data columns="parentId,name,resourceId" values="0,'Search',1"/>
  </table>

  <table name="MimeType">
    <comment>This meta data is stored inside akonadi to provide fast access.</comment>
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="name" type="QString" sqltype="VARCHAR(255)" properties="NOT NULL UNIQUE"/>
    <data columns="name" values="'application/octet-stream'"/>
    <data columns="name" values="'message/rfc822'"/>
    <data columns="name" values="'text/calendar'"/>
    <data columns="name" values="'text/vcard'"/>
    <data columns="name" values="'inode/directory'"/>
  </table>

  <table name="PimItem">
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="rev" type="int" properties="NOT NULL DEFAULT 0"/>
    <column name="remoteId" type="QByteArray"/>
    <column name="locationId" type="qint64" refTable="Location" refColumn="id" properties="REFERENCES Location(id)"/>
    <column name="mimeTypeId" type="qint64" refTable="MimeType" refColumn="id" properties="REFERENCES MimeType(id)"/>
    <column name="datetime" type="QDateTime" properties="DEFAULT CURRENT_TIMESTAMP">
      <comment>create/modified time</comment>
    </column>
    <column name="atime" type="QDateTime">
      <comment>read access time</comment>
    </column>
    <column name="dirty" type="bool">
      <comment>Indicates that this item has unsaved changes.</comment>
    </column>
    <index name="locationIndex" columns="locationId" unique="false"/>
    <reference name="parts" table="Part" key="pimItemId"/>
  </table>

  <table name="Flag">
    <comment>This meta data is stored inside akonadi to provide fast access.</comment>
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="name" type="QString" sqltype="VARCHAR(255)" properties="NOT NULL UNIQUE"/>
    <data columns="name" values="'important'"/>
    <data columns="name" values="'has_attachment'"/>
    <data columns="name" values="'spam'"/>
    <data columns="name" values="'\Answered'"/>
    <data columns="name" values="'\Flagged'"/>
    <data columns="name" values="'\Deleted'"/>
    <data columns="name" values="'\Seen'"/>
    <data columns="name" values="'\Draft'"/>
  </table>

  <table name="Part" properties="FOREIGN KEY (pimItemId) REFERENCES PimItemTable(id) ON DELETE CASCADE ON UPDATE CASCADE">
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="pimItemId" type="qint64" refTable="PimItem" refColumn="id" properties="NOT NULL REFERENCES PimItemTable(id)"/>
    <column name="name" type="QString" sqltype="VARCHAR(255)" properties="NOT NULL"/>
    <column name="data" type="QByteArray"/>
    <column name="datasize" type="int" properties="NOT NULL"/>
    <index name="pimItemIdNameIndex" columns="pimItemId,name" unique="true"/>
  </table>

  <table name="LocationAttribute">
    <column name="id" type="qint64" properties="NOT NULL PRIMARY KEY AUTOINCREMENT"/>
    <column name="locationId" type="qint64" refTable="Location" refColumn="id" properties="REFERENCES Location(id)"/>
    <column name="type" type="QByteArray" properties="NOT NULL"/>
    <column name="value" type="QByteArray"/>
    <index name="locationIndex" columns="locationId" unique="false"/>
  </table>

  <relation table1="PimItem" column1="id" table2="Flag" column2="id"/>

  <relation table1="Location" column1="id" table2="MimeType" column2="id">
    <comment>Specifies allowed MimeType for a Location</comment>
  </relation>

  <relation table1="Location" column1="id" table2="PimItem" column2="id">
    <comment>Used to associate items with search folders.</comment>
  </relation>
</database>
