
Some information about the Akonadi server storage backend
=========================================================

The storage backend stores the PIM data and some resource data into a
relational database.

The schema is created by DbInitializer from akonadidb.xml

To use the db access in the server, do something like this:
    ...
    DataStore::instance()->listMimeTypes());
    ...

C++ Files Overview:
-------------------

entity.{h,cpp} 
The files contain classes which reflect records in the tables of the database.

datastore.{h,cpp} 
The files contain a class which provides the access to the underlaying database tables.

debug.{h,cpp} 
The files contain convinience methods to dump the content of the entity classes
or of lists of them via qDebug() calls to stderr. This makes it easy to watch the
content during the development.


NOTE
====

This is work in progress. I'm in the process of defining the interfaces of
the entity classes and I will step by step add code which does the real
database access.
I also plan to add unit tests to make sure the the database access works
as intended.

If you have questions or want to help, please contact me via my
<a.gungl@gmx.de> account.

